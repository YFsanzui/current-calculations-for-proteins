[curp]
# 

vdw_cutoff_method = atom # Choice[atom]; The method to cut off the van der Waals interaction.

coulomb_method = cutoff # Choice[cutoff]; The method to calculate coulomb interaction.

remove_rotate = True # Bool; Remove the coordinate and velocity of rotation for the target atoms

enable_inverse_pair = False # Bool; Calculate and write out inverse pairs j <- i for flux adding normal group pairs: i <- j. This option is used in the case for calculating energy flux.

decomp_group_current = False # Bool; Flag whether decompose the group current into inside and outside contributions of group region.This option is used for calculating momentum current

coulomb_cutoff_method = atom # Choice[atom]; The method to cut off the coulomb interaction.

group_pair_file =  # File; Path to file to define group pair. If you didn't given, all of pairs within the targets will be calculated.

target_atoms = 1- # List[String]; The atom list calculated.

potential = amberbase # Choice[amberbase|amber94|amber96|amber99|amber99SB|amber03|amber12SB]; The potential function to calculate the pairwise forces.

vdw_cutoff_length = 99.9 # Float; The cutoff length for the van der Waals interaction.

remove_trans = True # Bool; Remove the coordinate and velocity of translation for the target atoms

log_frequency = 10 # Int; Log informations will be written out every given steps.

flux_grain = group # Choice[atom|group|both]; The grain to calculate the flux."atom", "group" and "both" values mean that the flux for atom parirs, group pairs and both of them will be calculated, respectively.

method = momentum-current # Choice[energy-flux|momentum-current|microcanonical]; The method of calculation."momentum-current" calculates the stress tensor for systems. "energy-flux" calculates the energy flow for systems. "dynamics is mainly used to verify the validity of  the CURP program numerically, so its implementation is very simple

group_method = none # Choice[united|residue|file|none]; The method to construct the group."united" means that hydrogen atoms are included in hevy atoms covalent to them."residue" means that the groups are calculated by residue level. If "file" is specified, the groups definition is givenby the group file in input section.

coulomb_cutoff_length = 99.9 # Float; The cutoff length for the coulomb interaction.

[dynamics]
# 

trj_format = ascii # Choice[ascii|netcdf]; The format of coordinates and velocities trajectory file.

vels_frequency = 1 # Int; The interval step to write velocity trajectory.

vels_file =  # File; The file path to write out the velocities trajectory. If empty, then don't write.

integrator = vverlet # Choice[vverlet|leapfrog]; The integrator to want to use with the dynamics.

num_steps = 1 # Int; The number of integration steps.

crds_frequency = 1 # Int; The interval step to write coordinate trajectory.

crds_file =  # File; The file path to write out the coordinates trajectory. If empty, then don't write.

dt = 0.001 # Float; Time step to advance snapshots to next step, in ps unit.

[input]
# 

group_file = group.cfg # File; The group file path to define group.if curp.group_mothod == file then this definition is used.

first_last_interval = 0  -1  1 # List[Int]; The first, last and interval step to read coordinates and velocities trajectory.

use_simtime = True # Bool; use the simulation time information in trajectory.

format = amber # Choice[presto|amber]; The format of the various files generated by other grograms.

[input_amber]
# 

restart_file =  # File; Restart file path.

velocity_file =  # File; Velocity trajectory file path.

target = trajectory # Choice[trajectory|restart]; The target input file to be used.

coordinate_file =  # File; Coordinate trajectory file path.

restart_format = restart # Choice[restart]; The format of restart file.

dump_parameters = False # Bool; Dump the parsed Amber force field parameter set.

velocity_format = ascii # Choice[ascii|netcdf]; The format of velocity file.

topology_file =  # File; Topology file path.

coordinate_format = ascii # Choice[ascii|netcdf]; The format of coordinate file.

[output]
# 

energy_decomp = False # Bool; Flag whether decompose the total energy to bonded, coulomb, and van der Waals interaction.

energy_freqency = 0 # Int; The frequency to write the energy information.

format = ascii # Choice[ascii|netcdf]; The format of flux data.

compress = False # Bool; Flag whether compress with gnu zip, then the extension of the file name became ".gz".

filename = current.dat # File; The file name to output the current or flux information.

frequency = 0 # Int; The frequency to create new file to write the additional file.

energy_compress = True # Bool; Flag whether compress with gnu zip for energy_file, then the extension of the file name became ".gz".

energy_file = energy.dat # File; The file path to output the energy information.

output_energy = False # Bool; Flag whether output the energy information or not.

decomp = False # Bool; Flag whether decompose the total current or flux to bonded, coulomb, and van der Waals interaction.

[volume]
# 

voronoi_solvation = none # Choice[none|RANDOM20]; The kind of solvation system to sink the target system in vacuum for the voronoi method. The density value of the water under NPT ensemble is 0.99651 [g/cm^3] at 27 [Kelvin]

output_gvolume_file =  # File; The file path to write out the group volumes trajectory. If this value is not given, writing out is not performed.The file written by this option can be used in the optionsgroup_trajectory_file.

atomic_trajectory_file =  # File; Atomic volumes trajectory file path for outer method.

group_trajectory_file =  # File; Group volumes trajectory file path for outer method.

voronoi_no_hydrogen = False # Bool; Flag to determine whether include hydrogen atomsfor the voronoi calculation.

voronoi_output_solvation_file =  # File; The file path to write out the solvation pdb data in the case of voronoi_solvation == "none".If the file path is not given, writing out is not performed.

voronoi_cutoff = 6.0 # Float; The cutoff length that the voronoi calculation finds outneighbour candidate particles.

output_volume_file =  # File; The file path to write out the atomic volumes trajectory. If this value is not given, writing out is not performed.The file written by this option can be used in the options,atomic_trajectory_file.

voronoi_probe_length = 2.4 # Float; The probe length of the solvation for the voronoi method.The water molecules within the probe length from the system are removed.

method = voronoi # Choice[none|vdw|voronoi|outer]; Algorithm to calculate the atomic volumes.
